{"version":3,"sources":["components/NavBar/NavBar.jsx","store/actions/index.js","components/Movie/MovieCard.jsx","pages/Home/Home.jsx","pages/Movie/Movie.jsx","pages/SearchMovie/SearchMovie.jsx","App.js","serviceWorker.js","store/reducers/index.js","store/index.js","index.js"],"names":["NavBar","history","useHistory","useState","query","setQuery","className","to","onSubmit","e","preventDefault","length","push","alert","handleSearch","onChange","target","value","type","GET_MOVIES_REQUEST","GET_MOVIES_SUCCESS","GET_MOVIES_FAILURE","GET_MOVIE_DETAILS_REQUEST","GET_MOVIE_DETAILS_SUCCESS","GET_MOVIE_DETAILS_FAILURE","GET_MOVIE_IMAGES_REQUEST","GET_MOVIE_IMAGES_SUCCESS","GET_MOVIE_IMAGES_FAILURE","GET_MOVIE_VIDEOS_REQUEST","GET_MOVIE_VIDEOS_SUCCESS","GET_MOVIE_VIDEOS_FAILURE","GET_MOVIE_KEYWORDS_REQUEST","GET_MOVIE_KEYWORDS_SUCCESS","GET_MOVIE_KEYWORDS_FAILURE","GET_RELATED_MOVIES_REQUEST","GET_RELATED_MOVIES_SUCCESS","GET_RELATED_MOVIES_FAILURE","GET_SEARCH_MOVIE_REQUEST","GET_SEARCH_MOVIE_SUCCESS","GET_SEARCH_MOVIE_FAILURE","getMoviesRequest","getMoviesSuccess","movies","payload","getMoviesFailure","error","getMovieDetailsRequest","getMovieDetailsSuccess","movieDetails","getMovieDetailsFailure","getMovieImagesRequest","getMovieImagesSuccess","movieImages","getMovieImagesFailure","getRelatedMoviesRequest","getRelatedMoviesSuccess","relatedMovies","getRelatedMoviesFailure","getMovieVideosRequest","getMovieVideosSuccess","movieVideos","getMovieVideosFailure","getMovieKeywordsRequest","getMovieKeywordsSuccess","movieKeywords","getMovieKeywordsFailure","getSearchMovieRequest","getSearchMovieSuccess","getSearchMovieFailure","MovieCard","adult","backdrop_path","genre_ids","original_language","id","overview","original_title","popularity","poster_path","release_date","title","vote_average","video","vote_count","onClick","idMovie","src","alt","substr","connect","state","MOVIES_STORE","moviesReducers","dispatch","getMoviesEffect","page","options","method","url","params","api_key","language","parseInt","headers","axios","request","then","data","catch","getMovies","moviesPage","useEffect","handlePaginator","moviesTotalPages","moviesLoading","map","movie","index","getMovieDetailsEffect","getMovieDetails","getMovieImagesEffect","include_image_language","getMovieImages","getRelatedMoviesEffect","getRelatedMovies","getMovieVideosEffect","getMovieVideos","getMovieKeywordsEffect","getMovieKeywords","useParams","movieVideo","VideoPlayerOptions","height","width","window","innerWidth","playerVars","autoplay","color","rel","showinfo","modestbranding","movieLoading","movieVideosLoading","results","videoId","key","opts","onReady","event","pauseVideo","getSearchMovieEffect","getSearchMovie","searchMoviePage","searchMovieTotalPages","searchMovieLoading","searchMovie","App","exact","path","component","Home","Movie","SearchMovie","Boolean","location","hostname","match","initialState","moviesError","totalMovies","searchMovieError","totalSearchMovies","movieError","movieImagesLoading","movieImagesError","movieVideosError","movieKeywordsLoading","movieKeywordsError","relatedMoviesLoading","relatedMoviesError","totalRelatedMovies","relatedMoviesTotalPages","relatedMoviesPage","action","total_results","total_pages","combineReducers","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ebd5b925.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport './navbar.css';\r\n\r\nconst NavBar = () =>{\r\n    const history = useHistory()\r\n    const [query, setQuery] = useState(\"\")\r\n    const handleSearch = (e)=>{\r\n        e.preventDefault();\r\n        return query.length >=1 ? history.push(`/search/${query}`) : alert(\"Please complete de search form\")\r\n        \r\n\r\n    }\r\n    return (\r\n        <div className=\"navbar-main\">\r\n            <div className=\"home-main-div-title\">\r\n                <Link className=\"home-main-div-title-link\" to=\"/\">Movies</Link>\r\n            </div>\r\n            <div className=\"home-main-div-search\">\r\n               <form onSubmit={(e)=>handleSearch(e)}>\r\n               <input onChange={(e)=> setQuery(e.target.value)} type=\"text\"/>\r\n               <button type=\"submit\"> Search Movies</button>\r\n                {/* <Link className=\"navbar-main-links\"  to={`/search/${query}`}>Search</Link> */}\r\n               </form>\r\n            </div>\r\n            <div className=\"home-main-div-icons\"> \r\n                <Link className=\"navbar-main-links\" to=\"/about\">About This Page</Link>\r\n            </div>\r\n            {/* <ul>\r\n                <li>\r\n                    <Link className=\"navbar-main-links\" to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link className=\"navbar-main-links\"  to=\"/movie/5050\">Movie</Link>\r\n                </li>\r\n                <li>\r\n                    <input onChange={(e)=> setQuery(e.target.value)} type=\"text\"/>\r\n                    <Link className=\"navbar-main-links\"  to={`/search/${query}`}>Search</Link>\r\n                </li>\r\n            </ul> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import axios from 'axios';\r\n\r\n//GET ALL TOPS MOVIES \r\nexport const GET_MOVIES_REQUEST = \"GET_MOVIES_REQUEST\";\r\nexport const GET_MOVIES_SUCCESS = \"GET_MOVIES_SUCCESS\";\r\nexport const GET_MOVIES_FAILURE = \"GET_MOVIES_FAILURE\";\r\n\r\n//GET MOVIE DETAILS\r\nexport const GET_MOVIE_DETAILS_REQUEST = \"GET_MOVIE_DETAILS_REQUEST\";\r\nexport const GET_MOVIE_DETAILS_SUCCESS = \"GET_MOVIE_DETAILS_SUCCESS\";\r\nexport const GET_MOVIE_DETAILS_FAILURE = \"GET_MOVIE_DETAILS_FAILURE\";\r\n\r\n//GET MOVIE IMAGES\r\nexport const GET_MOVIE_IMAGES_REQUEST = \"GET_MOVIE_IMAGES_REQUEST\";\r\nexport const GET_MOVIE_IMAGES_SUCCESS = \"GET_MOVIE_IMAGES_SUCCESS\";\r\nexport const GET_MOVIE_IMAGES_FAILURE = \"GET_MOVIE_IMAGES_FAILURE\";\r\n\r\n//GET  MOVIE VIDEOS \r\nexport const GET_MOVIE_VIDEOS_REQUEST = \"GET_MOVIE_VIDEOS_REQUEST\";\r\nexport const GET_MOVIE_VIDEOS_SUCCESS = \"GET_MOVIE_VIDEOS_SUCCESS\";\r\nexport const GET_MOVIE_VIDEOS_FAILURE = \"GET_MOVIE_VIDEOS_FAILURE\";\r\n\r\n//GET KEYWORDS MOVIES \r\nexport const GET_MOVIE_KEYWORDS_REQUEST = \"GET_MOVIE_KEYWORDS_REQUEST\";\r\nexport const GET_MOVIE_KEYWORDS_SUCCESS = \"GET_MOVIE_KEYWORDS_SUCCESS\";\r\nexport const GET_MOVIE_KEYWORDS_FAILURE = \"GET_MOVIE_KEYWORDS_FAILURE\";\r\n\r\n//GET RELATED MOVIES \r\nexport const GET_RELATED_MOVIES_REQUEST = \"GET_RELATED_MOVIES_REQUEST\";\r\nexport const GET_RELATED_MOVIES_SUCCESS = \"GET_RELATED_MOVIES_SUCCESS\";\r\nexport const GET_RELATED_MOVIES_FAILURE = \"GET_RELATED_MOVIES_FAILURE\";\r\n\r\n//GET SEARCH MOVIE \r\nexport const GET_SEARCH_MOVIE_REQUEST = \"GET_SEARCH_MOVIE_REQUEST\";\r\nexport const GET_SEARCH_MOVIE_SUCCESS = \"GET_SEARCH_MOVIE_SUCCESS\";\r\nexport const GET_SEARCH_MOVIE_FAILURE = \"GET_SEARCH_MOVIE_FAILURE\";\r\n\r\n\r\n//GET ALL MOVIES\r\nexport const getMovies = (page) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(getMoviesRequest());\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://api.themoviedb.org/3/movie/top_rated`,\r\n            params: {\r\n                api_key: \"d6457739d79b36fbc37f3aead5da67a8\",\r\n                language: \"es-ES\",\r\n                page: parseInt(page),\r\n            },\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        axios.request(options).then(movies => {\r\n            dispatch(getMoviesSuccess(movies.data));\r\n        }).catch(error => {\r\n            dispatch(getMoviesFailure(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getMoviesRequest = () => {\r\n    return {\r\n        type: GET_MOVIES_REQUEST,\r\n    };\r\n};\r\nexport const getMoviesSuccess = (movies) => {\r\n    return {\r\n        type: GET_MOVIES_SUCCESS,\r\n        payload: movies\r\n    };\r\n};\r\nexport const getMoviesFailure = (error) => {\r\n    return {\r\n        type: GET_MOVIES_FAILURE,\r\n        payload: error\r\n    };\r\n};\r\n\r\n\r\n//GET MOVIE DETAILS\r\nexport const getMovieDetails = (idMovie) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(getMovieDetailsRequest());\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://api.themoviedb.org/3/movie/${idMovie}`,\r\n            params: {\r\n                api_key: \"d6457739d79b36fbc37f3aead5da67a8\",\r\n                language: \"es-ES\",\r\n                page: 1,\r\n            },\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        axios.request(options).then(movies => {\r\n            dispatch(getMovieDetailsSuccess(movies.data));\r\n        }).catch(error => {\r\n            dispatch(getMovieDetailsFailure(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getMovieDetailsRequest = () => {\r\n    return {\r\n        type: GET_MOVIE_DETAILS_REQUEST,\r\n    };\r\n};\r\nexport const getMovieDetailsSuccess = (movieDetails) => {\r\n    return {\r\n        type: GET_MOVIE_DETAILS_SUCCESS,\r\n        payload: movieDetails\r\n    };\r\n};\r\nexport const getMovieDetailsFailure = (error) => {\r\n    return {\r\n        type: GET_MOVIE_DETAILS_FAILURE,\r\n        payload: error\r\n    };\r\n};\r\n\r\n//GET MOVIE IMAGES\r\nexport const getMovieImages = (idMovie) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(getMovieImagesRequest());\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://api.themoviedb.org/3/movie/${idMovie}/images`,\r\n            params: {\r\n                api_key: \"d6457739d79b36fbc37f3aead5da67a8\",\r\n                language: \"en-US\",\r\n                include_image_language: \"es-ES\",\r\n            },\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        axios.request(options).then(movies => {\r\n            dispatch(getMovieImagesSuccess(movies.data));\r\n        }).catch(error => {\r\n            dispatch(getMovieImagesFailure(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getMovieImagesRequest = () => {\r\n    return {\r\n        type: GET_MOVIE_IMAGES_REQUEST,\r\n    };\r\n};\r\nexport const getMovieImagesSuccess = (movieImages) => {\r\n    return {\r\n        type: GET_MOVIE_IMAGES_SUCCESS,\r\n        payload: movieImages\r\n    };\r\n};\r\nexport const getMovieImagesFailure = (error) => {\r\n    return {\r\n        type: GET_MOVIE_IMAGES_FAILURE,\r\n        payload: error\r\n    };\r\n};\r\n\r\n//GET RELATED MOVIE\r\nexport const getRelatedMovies = (idMovie) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(getRelatedMoviesRequest());\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://api.themoviedb.org/3/movie/${idMovie}/similar`,\r\n            params: {\r\n                api_key: \"d6457739d79b36fbc37f3aead5da67a8\",\r\n                language: \"es-ES\",\r\n                page: 1,\r\n            },\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        axios.request(options).then(movies => {\r\n            dispatch(getRelatedMoviesSuccess(movies.data));\r\n        }).catch(error => {\r\n            dispatch(getRelatedMoviesFailure(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getRelatedMoviesRequest = () => {\r\n    return {\r\n        type: GET_RELATED_MOVIES_REQUEST,\r\n    };\r\n};\r\nexport const getRelatedMoviesSuccess = (relatedMovies) => {\r\n    return {\r\n        type: GET_RELATED_MOVIES_SUCCESS,\r\n        payload: relatedMovies\r\n    };\r\n};\r\nexport const getRelatedMoviesFailure = (error) => {\r\n    return {\r\n        type: GET_RELATED_MOVIES_FAILURE,\r\n        payload: error\r\n    };\r\n};\r\n\r\n//GET MOVIE VIDEOS\r\nexport const getMovieVideos = (idMovie) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(getMovieVideosRequest());\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://api.themoviedb.org/3/movie/${idMovie}/videos`,\r\n            params: {\r\n                api_key: \"d6457739d79b36fbc37f3aead5da67a8\",\r\n                language: \"en-US\",\r\n            },\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        axios.request(options).then(movies => {\r\n            dispatch(getMovieVideosSuccess(movies.data));\r\n        }).catch(error => {\r\n            dispatch(getMovieVideosFailure(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getMovieVideosRequest = () => {\r\n    return {\r\n        type: GET_MOVIE_VIDEOS_REQUEST,\r\n    };\r\n};\r\nexport const getMovieVideosSuccess = (movieVideos) => {\r\n    return {\r\n        type: GET_MOVIE_VIDEOS_SUCCESS,\r\n        payload: movieVideos\r\n    };\r\n};\r\nexport const getMovieVideosFailure = (error) => {\r\n    return {\r\n        type: GET_MOVIE_VIDEOS_FAILURE,\r\n        payload: error\r\n    };\r\n};\r\n\r\n//GET MOVIE KEYWORDS\r\nexport const getMovieKeywords = (idMovie) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(getMovieKeywordsRequest());\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://api.themoviedb.org/3/movie/${idMovie}/keywords`,\r\n            params: {\r\n                api_key: \"d6457739d79b36fbc37f3aead5da67a8\",\r\n                language: \"en-US\",\r\n            },\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        axios.request(options).then(movies => {\r\n            dispatch(getMovieKeywordsSuccess(movies.data));\r\n        }).catch(error => {\r\n            dispatch(getMovieKeywordsFailure(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getMovieKeywordsRequest = () => {\r\n    return {\r\n        type: GET_MOVIE_KEYWORDS_REQUEST,\r\n    };\r\n};\r\nexport const getMovieKeywordsSuccess = (movieKeywords) => {\r\n    return {\r\n        type: GET_MOVIE_KEYWORDS_SUCCESS,\r\n        payload: movieKeywords\r\n    };\r\n};\r\nexport const getMovieKeywordsFailure = (error) => {\r\n    return {\r\n        type: GET_MOVIE_KEYWORDS_FAILURE,\r\n        payload: error\r\n    };\r\n};\r\n\r\n//GET SEARCH MOVIE \r\nexport const getSearchMovie = (query, page) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(getSearchMovieRequest());\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://api.themoviedb.org/3/search/movie`,\r\n            params: {\r\n                api_key: \"d6457739d79b36fbc37f3aead5da67a8\",\r\n                language: \"es-ES\",\r\n                query:query,\r\n                page:page\r\n            },\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        axios.request(options).then(movies => {\r\n            dispatch(getSearchMovieSuccess(movies.data));\r\n        }).catch(error => {\r\n            dispatch(getSearchMovieFailure(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getSearchMovieRequest = () => {\r\n    return {\r\n        type: GET_SEARCH_MOVIE_REQUEST,\r\n    };\r\n};\r\nexport const getSearchMovieSuccess = (movies) => {\r\n    return {\r\n        type: GET_SEARCH_MOVIE_SUCCESS,\r\n        payload: movies\r\n    };\r\n};\r\nexport const getSearchMovieFailure = (error) => {\r\n    return {\r\n        type: GET_SEARCH_MOVIE_FAILURE,\r\n        payload: error\r\n    };\r\n};","import React from 'react';\r\nimport './movie-card.css';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst MovieCard = ({\r\n    adult, backdrop_path, genre_ids, original_language, id,\r\n    original_title, overview, popularity, poster_path,release_date, title, video, vote_average,vote_count})=>{\r\n        const history = useHistory();\r\n        const handleClick = (idMovie)=>{\r\n            return history.push(`/movie/${idMovie}`)\r\n        }\r\n        return (\r\n            <div onClick={()=> handleClick(id)} className=\"movie-card\">\r\n                <div className=\"movie-card-col-img\">\r\n                    <img className=\"movie-card-img\" src={`https://image.tmdb.org/t/p/w185/${poster_path}`} alt={title}></img>\r\n                </div>\r\n                <div className=\"movie-card-col-body\">\r\n                    <h3 className=\"movie-card-title\">{title}</h3>\r\n                    <div>\r\n                        <p>{overview.substr(0,200) + \"...\"}</p>\r\n                    </div>\r\n                    <div className=\"movie-card-col-body-col\">\r\n                        <div className=\"movie-card-col-body-col-item\">\r\n                            {popularity}\r\n                        </div>\r\n                        <div className=\"movie-card-col-body-col-item\">\r\n                            {vote_average}\r\n                        </div>\r\n                        <div className=\"movie-card-col-body-col-item\">\r\n                            {vote_count}\r\n                        </div>\r\n                        <div className=\"movie-card-col-body-col-item\">\r\n                            {original_language}\r\n                        </div>\r\n                        <div className=\"movie-card-col-body-col-item\">\r\n                            {release_date}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default MovieCard;","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { getMovies } from '../../store/actions/index';\r\nimport './home.css';\r\nimport MovieCard from '../../components/Movie/MovieCard';\r\n\r\nconst Home = ({ getMoviesEffect, MOVIES_STORE})=>{\r\n  const page = MOVIES_STORE.moviesPage && MOVIES_STORE.moviesPage > 0 ?  MOVIES_STORE.moviesPage: 1\r\n  useEffect(() => {\r\n    getMoviesEffect(page)\r\n  }, [getMoviesEffect, page])\r\n  \r\n  const handlePaginator = (value)=>{\r\n    switch (value) {\r\n      case \"prev\":\r\n        if(MOVIES_STORE.moviesPage && MOVIES_STORE.moviesPage > 1){\r\n          return getMoviesEffect(MOVIES_STORE.moviesPage-1)\r\n        }\r\n        break;\r\n      case \"next\":\r\n        if(MOVIES_STORE.moviesPage && MOVIES_STORE.moviesPage < MOVIES_STORE.moviesTotalPages){\r\n          return getMoviesEffect(MOVIES_STORE.moviesPage+1)\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return ( \r\n    <div className=\"home-main-div\">\r\n      <div className=\"home-main\">\r\n        {MOVIES_STORE.moviesLoading\r\n        ?(\r\n          <p>Loading...</p>\r\n        ):(\r\n          MOVIES_STORE.movies.map((movie, index)=>{\r\n            return <MovieCard\r\n            key={index}\r\n            id={movie.id}\r\n            adult={movie.adult}\r\n            backdrop_path={movie.backdrop_path}\r\n            genre_ids={movie.genre_ids}\r\n            original_language={movie.original_language}\r\n            original_title={movie.adult}\r\n            overview={movie.overview}\r\n            popularity={movie.popularity}\r\n            poster_path={movie.poster_path}\r\n            release_date={movie.release_date}\r\n            title={movie.title}\r\n            video={movie.video}\r\n            vote_average={movie.vote_average}\r\n            vote_count={movie.vote_count}\r\n            />\r\n          })\r\n        )\r\n        }\r\n      </div>\r\n      <div>\r\n        <button onClick={()=>handlePaginator(\"prev\")}>Anterior</button>\r\n        <button onClick={()=>handlePaginator(\"next\")}>Siguiente</button>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps =  state => {\r\n  return {\r\n    MOVIES_STORE : state.moviesReducers,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getMoviesEffect: (page) => dispatch(getMovies(page)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from \"react-router\";\r\nimport YouTube from 'react-youtube';\r\nimport { \r\n  getMovieDetails,\r\n  getMovieImages,\r\n  getRelatedMovies,\r\n  getMovieVideos,\r\n  getMovieKeywords } from '../../store/actions/index';\r\nimport './movie.css';\r\n\r\n\r\nconst Movie = ({  getMovieDetailsEffect, getMovieImagesEffect,\r\n   getRelatedMoviesEffect, getMovieVideosEffect, getMovieKeywordsEffect, MOVIES_STORE})=>{\r\n\r\n    const {idMovie} = useParams();\r\n    const movie = MOVIES_STORE.movie || false\r\n    const movieVideo = MOVIES_STORE.movieVideos || false\r\n\r\n  useEffect(() => {\r\n    getMovieDetailsEffect(idMovie)\r\n    getMovieImagesEffect(idMovie)\r\n    getRelatedMoviesEffect(idMovie)\r\n    getMovieVideosEffect(idMovie)\r\n    getMovieKeywordsEffect(idMovie)\r\n  }, [getMovieDetailsEffect,\r\n     getMovieImagesEffect,\r\n     getRelatedMoviesEffect,\r\n     getMovieVideosEffect,\r\n     getMovieKeywordsEffect,\r\n     idMovie]);\r\n\r\n    const VideoPlayerOptions = {\r\n      height: '500px',\r\n      width: window.innerWidth - 80,\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n        color:\"white\",\r\n        rel:0,\r\n        showinfo:0,\r\n        modestbranding:1\r\n      },\r\n      rel:0,\r\n      showinfo:0,\r\n      modestbranding:1\r\n    };\r\n     //pause video onLoad\r\n     const _onReadyVideo = event=> event.target.pauseVideo(); \r\n\r\n\r\n  return ( \r\n      <div className=\"movie-main\">\r\n        {MOVIES_STORE.movieLoading\r\n        ?(\r\n          <p>Loading</p>\r\n        ):(\r\n          <>\r\n          {movie\r\n            ?(\r\n              <>\r\n              {!movieVideo.movieVideosLoading && movieVideo.results && movieVideo.results.length > 0\r\n                ?(\r\n                  <div className=\"movie-main-col-video\">\r\n                    {/* <iframe width=\"80%\" height=\"500px\" src={`https://www.youtube.com/embed/${movieVideo.results[0].key}`} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n                    <YouTube videoId={movieVideo.results[0].key} opts={VideoPlayerOptions} onReady={_onReadyVideo} />\r\n                  </div>\r\n                ):(\r\n                  <p>No Video</p>\r\n                )\r\n              }\r\n              <div className=\"movie-main-col\">\r\n                <h1>{movie.title}</h1>\r\n              </div>\r\n              </>\r\n            ):(\r\n              <p>No Movie</p>\r\n            )\r\n\r\n          }\r\n          </>\r\n        )\r\n        \r\n        }\r\n        \r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps =  state => {\r\n  return {\r\n    MOVIES_STORE : state.moviesReducers,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getMovieDetailsEffect: (idMovie) => dispatch(getMovieDetails(idMovie)),\r\n    getMovieImagesEffect: (idMovie) => dispatch(getMovieImages(idMovie)),\r\n    getRelatedMoviesEffect: (idMovie) => dispatch(getRelatedMovies(idMovie)),\r\n    getMovieVideosEffect: (idMovie) => dispatch(getMovieVideos(idMovie)),\r\n    getMovieKeywordsEffect: (idMovie) => dispatch(getMovieKeywords(idMovie)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from \"react-router\";\r\nimport { getSearchMovie } from '../../store/actions/index';\r\nimport './search-movie.css';\r\nimport MovieCard from '../../components/Movie/MovieCard'\r\n\r\nconst SearchMovie = ({getSearchMovieEffect, MOVIES_STORE})=>{\r\n\r\n    const {query} = useParams();\r\n\r\n  useEffect(() => {\r\n    getSearchMovieEffect(query, 1)\r\n  }, [getSearchMovieEffect, query])\r\n  \r\n  const handlePaginator = (value)=>{\r\n    switch (value) {\r\n      case \"prev\":\r\n        if(MOVIES_STORE.searchMoviePage && MOVIES_STORE.searchMoviePage > 1){\r\n          return getSearchMovieEffect(query, MOVIES_STORE.searchMoviePage - 1)\r\n        }\r\n        break;\r\n      case \"next\":\r\n        if(MOVIES_STORE.searchMoviePage && MOVIES_STORE.searchMoviePage < MOVIES_STORE.searchMovieTotalPages){\r\n          return getSearchMovieEffect(query, MOVIES_STORE.searchMoviePage + 1)\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return ( \r\n    <div className=\"home-main-div\">\r\n      <div className=\"home-main\">\r\n        {MOVIES_STORE.searchMovieLoading\r\n        ?(\r\n          <p>Loading...</p>\r\n        ):(\r\n          MOVIES_STORE.searchMovie.map((movie, index)=>{\r\n            return <MovieCard\r\n            key={index}\r\n            id={movie.id}\r\n            adult={movie.adult}\r\n            backdrop_path={movie.backdrop_path}\r\n            genre_ids={movie.genre_ids}\r\n            original_language={movie.original_language}\r\n            original_title={movie.adult}\r\n            overview={movie.overview}\r\n            popularity={movie.popularity}\r\n            poster_path={movie.poster_path}\r\n            release_date={movie.release_date}\r\n            title={movie.title}\r\n            video={movie.video}\r\n            vote_average={movie.vote_average}\r\n            vote_count={movie.vote_count}\r\n            />\r\n          })\r\n        )\r\n        }\r\n      </div>\r\n      <div>\r\n        <button onClick={()=>handlePaginator(\"prev\")}>Anterior</button>\r\n        <button onClick={()=>handlePaginator(\"next\")}>Siguiente</button>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps =  state => {\r\n  return {\r\n    MOVIES_STORE : state.moviesReducers,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getSearchMovieEffect: (query, page) => dispatch(getSearchMovie(query, page)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchMovie);\r\n\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Movie from \"./pages/Movie/Movie\";\r\nimport SearchMovie from \"./pages/SearchMovie/SearchMovie\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <NavBar></NavBar>\r\n      <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/movie/:idMovie\" component={Movie} />\r\n          <Route exact path=\"/search/:query\" component={SearchMovie} />\r\n      </Switch>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n    GET_MOVIES_REQUEST,\r\n    GET_MOVIES_SUCCESS,\r\n    GET_MOVIES_FAILURE,\r\n    GET_MOVIE_DETAILS_REQUEST,\r\n    GET_MOVIE_DETAILS_SUCCESS,\r\n    GET_MOVIE_DETAILS_FAILURE,\r\n    GET_MOVIE_IMAGES_REQUEST,\r\n    GET_MOVIE_IMAGES_SUCCESS,\r\n    GET_MOVIE_IMAGES_FAILURE,\r\n    GET_RELATED_MOVIES_REQUEST,\r\n    GET_RELATED_MOVIES_SUCCESS,\r\n    GET_RELATED_MOVIES_FAILURE,\r\n    GET_MOVIE_VIDEOS_REQUEST,\r\n    GET_MOVIE_VIDEOS_SUCCESS,\r\n    GET_MOVIE_VIDEOS_FAILURE,\r\n    GET_MOVIE_KEYWORDS_REQUEST,\r\n    GET_MOVIE_KEYWORDS_SUCCESS,\r\n    GET_MOVIE_KEYWORDS_FAILURE,\r\n    GET_SEARCH_MOVIE_REQUEST,\r\n    GET_SEARCH_MOVIE_SUCCESS,\r\n    GET_SEARCH_MOVIE_FAILURE\r\n} from '../actions/index.js';\r\n\r\nlet initialState = {\r\n    movies: [],\r\n    moviesLoading: true,\r\n    moviesError: \"All Good No Errors \",\r\n    totalMovies:0,\r\n    moviesTotalPages:0,\r\n    moviesPage:0,\r\n    searchMovie: [],\r\n    searchMovieLoading: true,\r\n    searchMovieError: \"All Good No Errors \",\r\n    totalSearchMovies:0,\r\n    searchMovieTotalPages:0,\r\n    searchMoviePage:0,\r\n    movie:{},\r\n    movieLoading: true,\r\n    movieError: \"All Good No Errors \",\r\n    movieImages:{},\r\n    movieImagesLoading: true,\r\n    movieImagesError: \"All Good No Errors \",\r\n    movieVideos:{},\r\n    movieVideosLoading: true,\r\n    movieVideosError: \"All Good No Errors \",\r\n    movieKeywords:[],\r\n    movieKeywordsLoading: true,\r\n    movieKeywordsError: \"All Good No Errors \",\r\n    relatedMovies: [],\r\n    relatedMoviesLoading: true,\r\n    relatedMoviesError: \"All Good No Errors \",\r\n    totalRelatedMovies:0,\r\n    relatedMoviesTotalPages:0,\r\n    relatedMoviesPage:0,\r\n};\r\n\r\nconst moviesReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_MOVIES_REQUEST:\r\n            return {\r\n                ...state,\r\n                moviesLoading: true\r\n            }\r\n        case GET_MOVIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                moviesLoading: false,\r\n                movies: action.payload.results,\r\n                totalMovies: action.payload.total_results,\r\n                moviesTotalPages:action.payload.total_pages,\r\n                moviesPage:action.payload.page,\r\n            }\r\n        case GET_MOVIES_FAILURE:\r\n            return {\r\n                ...state,\r\n                moviesError: action.payload,\r\n                moviesLoading: false\r\n            }\r\n        case GET_SEARCH_MOVIE_REQUEST:\r\n            return {\r\n                ...state,\r\n                searchMovieLoading: true\r\n            }\r\n        case GET_SEARCH_MOVIE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                searchMovieLoading: false,\r\n                searchMovie: action.payload.results,\r\n                totalSearchMovies: action.payload.total_results,\r\n                searchMovieTotalPages:action.payload.total_pages,\r\n                searchMoviePage:action.payload.page,\r\n            }\r\n        case GET_SEARCH_MOVIE_FAILURE:\r\n            return {\r\n                ...state,\r\n                searchMovieError: action.payload,\r\n                searchMovieLoading: false\r\n            }\r\n        case GET_MOVIE_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                movieLoading: true\r\n            }\r\n        case GET_MOVIE_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                movieLoading: false,\r\n                movie: action.payload\r\n            }\r\n        case GET_MOVIE_DETAILS_FAILURE:\r\n            return {\r\n                ...state,\r\n                movieError: action.payload,\r\n                movieLoading: false\r\n            }\r\n        case GET_MOVIE_IMAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                movieImagesLoading: true\r\n            }\r\n        case GET_MOVIE_IMAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                movieImagesLoading: false,\r\n                movieImages: action.payload\r\n            }\r\n        case GET_MOVIE_IMAGES_FAILURE:\r\n            return {\r\n                ...state,\r\n                movieImagesError: action.payload,\r\n                movieImagesLoading: false\r\n            }\r\n        case GET_MOVIE_VIDEOS_REQUEST:\r\n            return {\r\n                ...state,\r\n                movieVideosLoading: true\r\n            }\r\n        case GET_MOVIE_VIDEOS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                movieVideosLoading: false,\r\n                movieVideos: action.payload\r\n            }\r\n        case GET_MOVIE_VIDEOS_FAILURE:\r\n            return {\r\n                ...state,\r\n                movieVideosError: action.payload,\r\n                movieVideosLoading: false\r\n            }\r\n        case GET_MOVIE_KEYWORDS_REQUEST: \r\n            return {\r\n                ...state,\r\n                movieKeywordsLoading: true\r\n            }\r\n        case GET_MOVIE_KEYWORDS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                movieKeywordsLoading: false,\r\n                movieKeywords: action.payload\r\n            }\r\n        case GET_MOVIE_KEYWORDS_FAILURE:\r\n            return {\r\n                ...state,\r\n                movieKeywordsError: action.payload,\r\n                movieKeywordsLoading: false\r\n            }\r\n        case GET_RELATED_MOVIES_REQUEST:\r\n            return {\r\n                ...state,\r\n                relatedMoviesLoading: true\r\n            }\r\n        case GET_RELATED_MOVIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                relatedMoviesLoading: false,\r\n                relatedMovies: action.payload.results,\r\n                totalRelatedMovies: action.payload.total_results,\r\n                relatedMoviesTotalPages:action.payload.total_pages,\r\n                relatedMoviesPage:action.payload.page,\r\n            }\r\n        case GET_RELATED_MOVIES_FAILURE:\r\n            return {\r\n                ...state,\r\n                relatedMoviesError: action.payload,\r\n                relatedMoviesLoading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default moviesReducers;","import { combineReducers } from \"redux\";\r\nimport moviesReducers from \"./reducers/index\";\r\n\r\nexport default combineReducers({\r\n    moviesReducers\r\n});\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport logger from 'redux-logger';\r\nimport reducers from './store/index';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk,logger))\r\n);\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}